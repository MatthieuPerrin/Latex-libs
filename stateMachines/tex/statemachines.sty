% SPDX-License-Identifier: CC-BY-SA-4.0
% Author: Matthieu Perrin

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{statemachines}[2025/06/08 Package for automata, puchdown automata and turing machines]

\RequirePackage{xcolor}
\RequirePackage{keyval}
\RequirePackage{etoolbox}
\RequirePackage{xparse}
\RequirePackage{grid}
\RequirePackage{2Darray}
\RequirePackage{tikz}
\usetikzlibrary{automata}
\usetikzlibrary{overlay-beamer-styles}

\tikzset{
  smBox/.style={
    rectangle,
    rounded corners,
    fill=structure!20,
    draw,
    align=center
  },
  state before/.style={
    circle,
    minimum height=6mm,
    minimum width=6mm,
  },
  state after/.style={
    draw highlighted,
    text highlighted,
    fill highlighted,
    draw,
    rounded corners=3mm,
    anchor=mid,
    align=center,
  },
  all state machines/.style={
    shorten >=1pt, on grid, auto,
    initial text=,
    every initial by arrow/.append style={-latex},
    initial distance=3mm,
    every edge/.append style={-latex,draw highlighted, text highlighted,},
    loop/.append style={looseness=5},
    font={\footnotesize},
  },
  automaton/.style={
    all state machines,
    grid size=12mm,
  },
  pushdown/.style={
    all state machines,
    grid size=20mm,
    initial text=$\diamond$
  },
  turingMachine/.style={
    all state machines,
    grid size=20mm,
  },
  word/.style={
    grid east,
  },
  tape/.style={
    grid east,
    execute at begin scope={\cell[open before]{\dots}},
    execute at end scope={\cell[open after]{\dots}},
  },
  stack/.style={
    grid north,
    execute at end scope={\cell[open after]{}},
  },
  queue/.style={
    grid east,
    execute at begin scope={\cell[open before]{$\rightarrow$}},
    execute at end scope={\cell[open after]{$\rightarrow$}},
  },
  direction/.code={\def\smDirection{#1}\@nameuse{sm@config@direction@#1}},
  size/.style={x=#1,y=#1},
  headsize/.code={},
  %
  grid north/.append style={
    execute at begin scope={
      \let\sm@head\smheadeast%
      \let\smheadfrom\sm@head@from@east%
    },
    open before/.style={open south,},
    open after/.style={open north,},
    open sides/.style={open east, open west,},
  },
  grid south/.append style={
    execute at begin scope={
      \let\sm@head\smheadwest%
      \let\smheadfrom\sm@head@from@west%
    },
    open before/.style={open north,},%
    open after/.style={open south,},%
    open sides/.style={open east, open west,},%
  },
  grid east/.append style={
    execute at begin scope={
      \let\sm@head\smheadsouth%
      \let\smheadfrom\sm@head@from@south%
    },
    open before/.style={open west,},%
    open after/.style={open east,},%
    open sides/.style={open north, open south,},%
  },
  grid west/.append style={
    execute at begin scope={
      \let\sm@head\smheadnorth%
      \let\smheadfrom\sm@head@from@north%
    },
    open before/.style={open east,},%
    open after/.style={open west,},%
    open sides/.style={open north, open south,},%
  },
}

\newcommand\smsave[1]{\pgfnodealias{#1}{grid@cell@current}}




\newcommand\sm@draw@north[1]{\node[anchor=south, outer sep=0, inner sep=0] (sm@head) at (grid@cell@current.north) {#1};}
\newcommand\sm@draw@south[1]{\node[anchor=north, outer sep=0, inner sep=0] (sm@head) at (grid@cell@current.south) {#1};}
\newcommand\sm@draw@east [1]{\node[anchor=west,  outer sep=0, inner sep=0] (sm@head) at (grid@cell@current.east)  {#1};}
\newcommand\sm@draw@west [1]{\node[anchor=east,  outer sep=0, inner sep=0] (sm@head) at (grid@cell@current.west)  {#1};}
\newcommand\sm@go@to[1]{\pgfnodealias{grid@cell@current}{#1}}

\newcommand\smheadnorth[1][]{\sm@draw@north{\sm@head@figure[rotate=180,#1]{3mm}}}
\newcommand\smheadsouth[1][]{\sm@draw@south{\sm@head@figure[rotate=  0,#1]{3mm}}}
\newcommand\smheadeast [1][]{\sm@draw@east {\sm@head@figure[rotate= 90,#1]{3mm}}}
\newcommand\smheadwest [1][]{\sm@draw@west {\sm@head@figure[rotate=-90,#1]{3mm}}}
\newcommand\smhead[1][]{\sm@head[#1]}


\newcommand\sm@head@figure[2][]{%
  \begin{tikzpicture}%
    \fill[rounded corners=.3*#2,#1] (0, 0) -- (-.6 * #2, -#2) -- (.6 * #2, -#2) -- (0, 0);%
  \end{tikzpicture}%
}

\newcommand\sm@head@from@north[2][]{
  \node[anchor=south,  outer sep=0, inner sep=0] (sm@head)       at (grid@cell@current.north)  {\sm@head@figure[rotate=180,#1]{3mm}};
  \node[anchor=south,  outer sep=0, inner sep=0] (sm@head@other) at ($(grid@cell@current.north) +(-#2,0)$)  {\sm@head@figure[rotate=180,opacity=.4,#1]{3mm}};
  \path[->,#1] (sm@head@other) edge (sm@head);
}
\newcommand\sm@head@from@south[2][]{
  \node[anchor=north,  outer sep=0, inner sep=0] (sm@head)       at (grid@cell@current.south)  {\sm@head@figure[#1]{3mm}};
  \node[anchor=north,  outer sep=0, inner sep=0] (sm@head@other) at ($(grid@cell@current.south) +(#2,0)$)  {\sm@head@figure[opacity=.4,#1]{3mm}};
  \path[->,#1] (sm@head@other) edge (sm@head);
}
\newcommand\sm@head@from@east[2][]{
  \node[anchor=west,  outer sep=0, inner sep=0] (sm@head)       at (grid@cell@current.east)  {\sm@head@figure[rotate= 90,#1]{3mm}};
  \node[anchor=west,  outer sep=0, inner sep=0] (sm@head@other) at ($(grid@cell@current.east) +(0,#2)$)  {\sm@head@figure[rotate= 90,opacity=.4,#1]{3mm}};
  \path[->,#1] (sm@head@other) edge (sm@head);
}
\newcommand\sm@head@from@west[2][]{
  \node[anchor=east,  outer sep=0, inner sep=0] (sm@head)       at (grid@cell@current.west)  {\sm@head@figure[rotate= -90,#1]{3mm}};
  \node[anchor=east,  outer sep=0, inner sep=0] (sm@head@other) at ($(grid@cell@current.west) +(0,-#2)$)  {\sm@head@figure[rotate= -90,opacity=.4,#1]{3mm}};
  \path[->,#1] (sm@head@other) edge (sm@head);
}




%%%%%%%%%%%%%%%%%%%%%%%%%%%
%      Transitions        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand\sm@transition@internal[6][]{\ensuremath{\ifblank{#1}{}{#1\!:\!} & \mathord{#2} & \mathord{#3} &\mathord{#4} &\mathord{#5} & \mathord{#6} \\}}
\newcommand\sm@transition@aligned[6][]{\ensuremath{\sm@transition@align{\sm@transition@internal[#1]{#2}{#3}{#4}{#5}{#6}}}}
\newcommand\sm@transition@external\sm@transition@aligned
\newcommand\sm@transition@align[1]{\begin{array}{@{}r@{\,}c@{}c@{}c@{}c@{}c@{}}#1\end{array}}
\newcommand\smAlign[1]{%
  \begingroup%
  \let\sm@transition@external\sm@transition@internal%
  \ensuremath{\sm@transition@align{#1}}%
  \endgroup%
}
\newcommand\smGroup[1]{\ensuremath{\left\{\smAlign{#1}\right.}}

\newcommand\smPAtrans [4][]{\sm@transition@external[#1]{#2}{/}{#3}{/}{#4}}
\newcommand\smTMtrans [4][]{\sm@transition@external[#1]{#2}{/}{#3}{,}{#4}}
\newcommand\smTMtransS[3][]{\smTMtrans[#1]{#2}{#3}{\diamond}}
\newcommand\smTMtransL[3][]{\smTMtrans[#1]{#2}{#3}{\triangleleft}}
\newcommand\smTMtransR[3][]{\smTMtrans[#1]{#2}{#3}{\triangleright}}
\newcommand\smTMtransP[3][]{\smTMtrans[#1]{#2}{#3}{+}}
\newcommand\smTMtransM[2][]{\sm@transition@external[#1]{#2}{/}{-}{}{}}

\providecommand{\blank}{\ensuremath{\#}}

%%%%%%%%%%%%%%%%

\newcommand<>\state[1][]{\node#2[state before,#1, state after]}

\tikzset{leadsto/.style={decorate, decoration={snake, amplitude=.5mm, segment length=2mm, post=lineto, post length=1mm},->,},}

\newcommand\cloudPath[3][fade]{
  \begin{pgfonlayer}{background}
    \path  (#2) edge[draw=none] node[#1, fill, fill highlighted, opacity=.5, anchor=base, cloud, cloud puffs=11, cloud puff arc=120, aspect=2, inner ysep=5pt]{}  (#3);
  \end{pgfonlayer}
  \path[densely dotted, opacity=.7, #1] (#2) edge[bend left=5mm]  (#3);
  \path[densely dotted, opacity=.7, #1] (#2) edge                 (#3);
  \path[densely dotted, opacity=.7, #1] (#2) edge[bend right=5mm] (#3);
}



\overlay@completestyle{initial}
\overlay@completestyle{initial left}
\overlay@completestyle{initial right}
\overlay@completestyle{initial above}
\overlay@completestyle{initial below}
\overlay@completestyle{accepting}


\endinput
