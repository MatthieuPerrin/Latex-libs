% SPDX-License-Identifier: CC-BY-SA-4.0
% Author: Matthieu Perrin

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{overlay}[2025/06/16 Package for advanced overlay management]

\RequirePackage{beamerbaseoverlay}
%\RequirePackage{xstring}

%\let\overlays@orig@alt=\alt
%\let\overlays@orig@temporal=\temporal
%\let\overlays@orig@onlyif=\onlyif
%\let\overlays@orig@visible=\visible
%\let\overlays@orig@invisible=\invisible
%\let\overlays@orig@emph=\emph

\newcommand<>\nothing[1]{}
\@ifclasswith{beamer}{handout}{
  \let\onlyb\nothing
  \let\uncoverb\nothing
  \let\uncoverb\nothing
  %
  \let\onlyh\only
  \let\uncoverh\uncover
}{
  \let\onlyb\only
  \let\uncoverb\uncover
  %
  \let\onlyh\nothing
  \let\uncoverh\nothing
}

\@ifclasswith{beamer}{handout}{\tikzset{
    overlay@handout@alt/.style n args={3}{alt=#1{#2}{#3}},
    overlay@beamer@alt/.style n args={3}{alt=#1{#3}{#2}},
}}{\tikzset{
    overlay@handout@alt/.style n args={3}{alt=#1{#3}{#2}},
    overlay@beamer@alt/.style n args={3}{alt=#1{#2}{#3}},
}}
 
\tikzset{
  on/.style         2 args={alt=#1{#2}{}},
  handout/.style          ={overlay@handout@alt={<1->}{#1}{}},
  handout on/.style 2 args={overlay@handout@alt={#1}{#2}{}},
  beamer/.style           ={overlay@beamer@alt={<1->}{#1}{}},
  beamer on/.style  2 args={overlay@beamer@alt={#1}{#2}{}},
}


\newcommand\overlay@completestyle[1]{
  \tikzset{
    #1 b/.style  ={beamer={#1}},
    #1 h/.style  ={handout={#1}},
    #1 on/.style ={on={##1}{#1}},
    #1 ob/.style ={beamer on={##1}{#1}},
    #1 oh/.style ={handout on={##1}{#1}},
  }
}

\newcommand\overlay@createstyle[2]{
  \tikzset{#1/.style    ={#2},}
  \overlay@completestyle{#1}
}

\overlay@createstyle{structure}{
%  every state/.append style={structure, fill=structure!30},
%  every path/.append style={structure,},
}
\overlay@createstyle{example}{
%  every state/.append style={example, fill=example!30},
%  every path/.append style={example,},
}
\overlay@createstyle{alert}{
%  every state/.append style={alert, fill=alert!30},
%  every path/.append style={alert,},
}
\overlay@createstyle{fade}{
%  every state/.append style={black!30, fill=black!10},
%  every path/.append style={black!30,},
}


\tikzset{
  fill highlighted/.style={},
  text highlighted/.style={},
  draw highlighted/.style={},
  alert/.append style={
    draw highlighted/.append style={draw=alert},
    text highlighted/.append style={text=alert},
    fill highlighted/.append style={fill=alert!30},
%    every state/.append style={draw highlighted, text highlighted, fill highlighted,},
  },
  example/.append style={
    draw highlighted/.append style={draw=example},
    text highlighted/.append style={text=example},
    fill highlighted/.append style={fill=example!30},
%    every state/.append style={draw highlighted, text highlighted, fill highlighted,},
  },
  structure/.append style={
    draw highlighted/.append style={draw=structure},
    text highlighted/.append style={text=structure},
    fill highlighted/.append style={fill=structure!30},
%    every state/.append style={draw highlighted, text highlighted, fill highlighted,},
  },
  fade/.append style={
    draw highlighted/.append style={draw=black!30},
    text highlighted/.append style={text=black!30},
    fill highlighted/.append style={fill=black!10},
%    every state/.append style={draw highlighted, text highlighted, fill highlighted,},
  },
  every path/.append style={draw highlighted, text highlighted, },
}

%\tikzset{
%  thestate/.style={
%    draw highlighted,
%    text highlighted,
%    fill highlighted,
%    draw,                 % draw a border
%    rectangle,               % node shape = circle
%    inner sep=2pt,        % padding inside the circle
%    outer sep=0pt         % no extra space outside
%    minimum size=6mm,     % make sure itâ€™s at least 6 mm across
%%    thick                 % use a thicker line for the circle
%  },
%}

\newcommand<>\state[1][]{\node#2[draw highlighted, text highlighted, fill highlighted, #1, state]}


\newcommand\highlight[2][]{%
  \tikz[baseline=(n.base)]{%
    \node[inner xsep=0pt, inner ysep=0pt, outer sep=0pt, rounded corners] (n) {#2};%
    \begin{pgfonlayer}{background}
      \node[rounded corners, fit=(n), inner xsep=3pt, inner ysep=1pt, outer sep=0pt, #1, fill highlighted] (bg) {};
    \end{pgfonlayer}
    \pgfresetboundingbox
    \useasboundingbox (n.south west) rectangle (n.north east);%
  }%
}




\newcommand\overlays@text{}
 
\newcommand<>\overlay@on[1]{\only#2{\renewcommand\overlays@text{#1}}}
 
\newcommand<>\oneof[2][]{%
  \begingroup%
  \let\on\overlay@on
  \uncover#3{%
    \renewcommand\overlays@text{#1}%
    #2%
    \overlays@text%
  }%
  \endgroup
}

\endinput
